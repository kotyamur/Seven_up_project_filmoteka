{"mappings":"iiBAAAA,EAAA,S,iCCAA,IAAAC,EAAAD,EAAA,S,aCAME,EAAQ,CACZ,CAAEC,GAAI,GAAIC,KAAM,UAEhB,CAAED,GAAI,GAAIC,KAAM,aAEhB,CAAED,GAAI,GAAIC,KAAM,aAEhB,CAAED,GAAI,GAAIC,KAAM,UAEhB,CAAED,GAAI,GAAIC,KAAM,SAChB,CAAED,GAAI,GAAIC,KAAM,eAEhB,CAAED,GAAI,GAAIC,KAAM,SAEhB,CAAED,GAAI,MAAOC,KAAM,UAEnB,CAAED,GAAI,GAAIC,KAAM,WAEhB,CAAED,GAAI,GAAIC,KAAM,WAEhB,CAAED,GAAI,GAAIC,KAAM,UAEhB,CAAED,GAAI,MAAOC,KAAM,SAEnB,CAAED,GAAI,KAAMC,KAAM,WAElB,CAAED,GAAI,MAAOC,KAAM,WAEnB,CAAED,GAAI,IAAKC,KAAM,mBAEjB,CAAED,GAAI,MAAOC,KAAM,YAEnB,CAAED,GAAI,GAAIC,KAAM,YAEhB,CAAED,GAAI,MAAOC,KAAM,OAEnB,CAAED,GAAI,GAAIC,KAAM,Y,iBDhCZC,EAAO,CACXC,OAAQC,SAASC,cAAc,gBAC/BC,OAAQF,SAASC,cAAc,eAC/BE,QAASH,SAASC,cAAc,YAChCG,SAAUJ,SAASC,cAAc,WAG7BI,EAAM,IAAI,EAAAC,EAAAC,SAUhB,SAASC,EAASC,GAChBX,EAAKM,SAASM,mBAAmB,YAAyBD,EEnBvDE,KACC,SAAAC,G,IACEC,EAAWD,EAAXC,YACAC,EAAcF,EAAdE,eACAC,EAAYH,EAAZG,aACAC,EAAYJ,EAAZI,aACAC,EAAKL,EAALK,MACAC,EAASN,EAATM,UAEIC,EAAa,GACbC,EAAM,mCACNC,EAAOC,OAAON,GAAcO,MAAM,EAAG,GACrB,OAAhBV,IACFO,EAAM,uCACNP,EAAc,IAEK,KAAjBG,IACFQ,QAAQC,IAAI,WACZJ,EAAO,kBAEJH,EAAY,GACfC,EAAWO,KAAK,kB,IAEbC,GAAS,EAATC,GAAS,EAATC,OAASC,E,IAAd,QAAKC,EAAAC,EAAarC,EAAKsC,OAAAC,cAAlBP,GAAAI,EAAAC,EAASG,QAAAC,MAATT,GAAS,EAAW,CAApB,IAAMU,EAANN,EAASO,MACPC,GAAQ,EAARC,GAAQ,EAARC,OAAQX,E,IAAb,QAAKY,EAAAC,EAAYzB,EAASe,OAAAC,cAArBK,GAAAG,EAAAC,EAAQR,QAAAC,MAARG,GAAQ,EAARG,EAAQJ,QACAD,EAAIzC,IACbuB,EAAWO,KAAKW,EAAIxC,M,SAFnB2C,GAAQ,EAARC,EAAQG,E,YAARL,GAAQ,MAARI,EAAQE,QAARF,EAAQE,S,WAARL,E,MAAAC,K,SADFb,GAAS,EAATC,EAASe,E,YAATjB,GAAS,MAATK,EAASa,QAATb,EAASa,S,WAATjB,E,MAAAC,GAOL,MAAO,8IAGiBiB,OAAN1B,GAA2B0B,OAArBjC,EAAY,WAGDiC,OAHUhC,EAAe,uIAKzBgC,OAFA7B,EAAM,wGAGP6B,OADC3B,EAAW,kDAEyB2B,OADrCzB,EAAK,uFAC6CyB,OAAb/B,EAAa,iGAQvFgC,KAAK,K,SF1BKC,I,OAAAA,EAAfC,EAAAvD,EAAA,CAAAuD,EAAAC,GAAAC,MAAA,SAAAC,I,2FAEU/C,EAAIgD,Y,cACV7B,QAAQC,IAAIpB,EAAIiD,O,SAEQjD,EAAIN,S,OAE5BS,EAFe+C,EAAAC,M,kDAIfhC,QAAQC,IAAG8B,EAAAE,I,2DATYC,MAAAC,KAAAC,WAZ3B9D,EAAKC,OAAO8D,iBAAiB,UAE7B,SAAkBC,GAChBA,EAAEC,iBACF1D,EAAI2D,YAAcF,EAAEG,cAAcC,SAASF,YAAY1B,M,WAQ1CU,EAAYU,MAAAC,KAAAC,WAPzBO,MGlBF,IAAMC,EAAapE,SAASC,cAAc,+BACpCoE,EAAWrE,SAASC,cAAc,6BAExCmE,EAAWP,iBAAiB,SAG5B,SAAkCS,GAC9BA,EAAIP,iBACJK,EAAWG,UAAUC,OAAO,UAW5BJ,EAAWG,UAAUE,SAAS,UAC9BL,EAAWM,YAAY,sBACvBN,EAAWM,YAAY,oBAjB3BL,EAASR,iBAAiB,SAQ1B,SAAgCS,GAC5BA,EAAIP,iBACJM,EAASE,UAAUC,OAAO,UAW1BH,EAASE,UAAUE,SAAS,UAC5BJ,EAASK,YAAY,sBACrBL,EAASK,YAAY,kB","sources":["src/index.js","src/js/renderUi.js","src/js/genre.js","src/js/markupFilms.js","src/js/watchedFilmsLS.js"],"sourcesContent":["import './js/api';\nimport './js/constants';\nimport './js/elements';\nimport './js/students-modal';\nimport './js/renderUi';\nimport './js/watchedFilmsLS';\n","import markupFilms from './markupFilms';\nimport Api from './api';\nimport { genre } from './genre';\n\nconst refs = {\n  search: document.querySelector('.form__input'),\n  button: document.querySelector('.search_btn'),\n  gallery: document.querySelector('.gallery'),\n  filmLsit: document.querySelector('.films'),\n};\n\nconst api = new Api();\n\nrefs.search.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  api.searchQuery = e.currentTarget.elements.searchQuery.value;\n  findRenderUi();\n}\n\nfunction renderUi(result) {\n  refs.filmLsit.insertAdjacentHTML('beforeend', markupFilms(result));\n}\n\nasync function findRenderUi() {\n  try {\n    await api.findGenre();\n    console.log(api.genre);\n\n    const resultApi = await api.search();\n    // console.log(api.totlaPages);\n    renderUi(resultApi);\n  } catch (error) {\n    console.log(error);\n  }\n}\n","const genre = [\n  { id: 28, name: 'Action' },\n\n  { id: 12, name: 'Adventure' },\n\n  { id: 16, name: 'Animation' },\n\n  { id: 35, name: 'Comedy' },\n\n  { id: 80, name: 'Crime' },\n  { id: 99, name: 'Documentary' },\n\n  { id: 18, name: 'Drama' },\n\n  { id: 10751, name: 'Family' },\n\n  { id: 14, name: 'Fantasy' },\n\n  { id: 36, name: 'History' },\n\n  { id: 27, name: 'Horror' },\n\n  { id: 10402, name: 'Music' },\n\n  { id: 9648, name: 'Mystery' },\n\n  { id: 10749, name: 'Romance' },\n\n  { id: 878, name: 'Science Fiction' },\n\n  { id: 10770, name: 'TV Movie' },\n\n  { id: 53, name: 'Thriller' },\n\n  { id: 10752, name: 'War' },\n\n  { id: 37, name: 'Western' },\n];\n\nexport { genre };\n","import { genre } from './genre';\nexport default function markupFilms(results) {\n  return results\n    .map(\n      ({\n        poster_path,\n        original_title,\n        vote_average,\n        release_date,\n        title,\n        genre_ids,\n      }) => {\n        let arrayGenre = [];\n        let url = 'https://image.tmdb.org/t/p/w500/';\n        let year = String(release_date).slice(0, 4);\n        if (poster_path === null) {\n          url = 'https://i.postimg.cc/NF6QdzcX/no.jpg';\n          poster_path = '';\n        }\n        if (release_date === '') {\n          console.log('no data');\n          year = 'no information';\n        }\n        if ((genre_ids = [])) {\n          arrayGenre.push('No information');\n        }\n        for (const gen of genre) {\n          for (const id of genre_ids) {\n            if (id === gen.id) {\n              arrayGenre.push(gen.name);\n            }\n          }\n        }\n        return `<li class=\"films__item\">\n          <a href=\"\" class=\"films__item-link\">\n            <div class=\"poster__thumb\">\n              <img src=\"${url}${poster_path}\" alt=\"${original_title}\" class=\"poster__foto\" />\n            </div>\n              <div class=\"poster__about\">\n                <p class=\"poster__title\">${title}</p>\n                  <div class=\"poster__description\">\n                <p class=\"poster__genre\">${arrayGenre}</p>\n                <p class=\"poster__year\">${year}</p>\n                <p class=\"poster__rating\"><span class=\"poster__rating__text\">${vote_average}</span></p>\n                </div>\n              </div>\n\n          </a>\n        </li>`;\n      }\n    )\n    .join('');\n}\n","const watchedBtn = document.querySelector('button[data-type=\"watched\"]')\nconst queueBtn = document.querySelector('button[data-type=\"queue\"]')\n\nwatchedBtn.addEventListener('click', onWatchedFilmsToSaveBtn)\nqueueBtn.addEventListener('click', onQueueFilmsToSaveBtn)\n\nfunction onWatchedFilmsToSaveBtn (evt) {\n    evt.preventDefault()\n    watchedBtn.classList.toggle('active')\n    btnWatchedTextContentToChange()\n}\n\nfunction onQueueFilmsToSaveBtn (evt) {\n    evt.preventDefault()\n    queueBtn.classList.toggle('active')\n    btnQueueTextContentToChange()\n}\n\nfunction btnWatchedTextContentToChange() {\n    watchedBtn.classList.contains('active') ?\n    watchedBtn.textContent='remove from watched' :\n    watchedBtn.textContent='add to watched'\n}\n\nfunction btnQueueTextContentToChange() {\n    queueBtn.classList.contains('active') ?\n    queueBtn.textContent='remove from watched' :\n    queueBtn.textContent='add to queue'\n}\n\n    "],"names":["parcelRequire","$bpxeT","$8c8a5c1bab798b54$export$ee68baf4cb9663dc","id","name","$f8d4034940b3aa41$var$refs","search","document","querySelector","button","gallery","filmLsit","$f8d4034940b3aa41$var$api","$b7ONl","default","$f8d4034940b3aa41$var$renderUi","result","insertAdjacentHTML","map","param","poster_path","original_title","vote_average","release_date","title","genre_ids","arrayGenre","url","year","String","slice","console","log","push","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","gen","value","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step1","_iterator1","err","return","concat","join","$f8d4034940b3aa41$var$_findRenderUi","$parcel$interopDefault","$2TvXO","mark","_callee","findGenre","genre","_ctx","sent","t0","apply","this","arguments","addEventListener","e","preventDefault","searchQuery","currentTarget","elements","$f8d4034940b3aa41$var$findRenderUi","$d3f723aaf36ff29a$var$watchedBtn","$d3f723aaf36ff29a$var$queueBtn","evt","classList","toggle","contains","textContent"],"version":3,"file":"index.af540360.js.map"}