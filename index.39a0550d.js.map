{"mappings":"oeAAAA,EAAA,S,iCCAA,MAAMC,EAAQ,CACZ,CAAEC,GAAI,GAAIC,KAAM,UAEhB,CAAED,GAAI,GAAIC,KAAM,aAEhB,CAAED,GAAI,GAAIC,KAAM,aAEhB,CAAED,GAAI,GAAIC,KAAM,UAEhB,CAAED,GAAI,GAAIC,KAAM,SAChB,CAAED,GAAI,GAAIC,KAAM,eAEhB,CAAED,GAAI,GAAIC,KAAM,SAEhB,CAAED,GAAI,MAAOC,KAAM,UAEnB,CAAED,GAAI,GAAIC,KAAM,WAEhB,CAAED,GAAI,GAAIC,KAAM,WAEhB,CAAED,GAAI,GAAIC,KAAM,UAEhB,CAAED,GAAI,MAAOC,KAAM,SAEnB,CAAED,GAAI,KAAMC,KAAM,WAElB,CAAED,GAAI,MAAOC,KAAM,WAEnB,CAAED,GAAI,IAAKC,KAAM,mBAEjB,CAAED,GAAI,MAAOC,KAAM,YAEnB,CAAED,GAAI,GAAIC,KAAM,YAEhB,CAAED,GAAI,MAAOC,KAAM,OAEnB,CAAED,GAAI,GAAIC,KAAM,Y,iBChClB,MAAMC,EAAO,CACXC,OAAQC,SAASC,cAAc,gBAC/BC,OAAQF,SAASC,cAAc,mBAC/BE,QAASH,SAASC,cAAc,YAChCG,SAAUJ,SAASC,cAAc,WAG7BI,EAAM,IAAI,EAAAC,EAAAC,SAEhBT,EAAKC,OAAOS,iBAAiB,UAE7B,SAAkBC,GAChBA,EAAEC,iBACFL,EAAIM,YAAcF,EAAEG,cAAcC,SAASF,YAAYG,MAQzDC,iBACE,UACQV,EAAIW,YACVC,QAAQC,IAAIb,EAAIc,OAEhB,MAAMC,QAAkBf,EAAIN,SATdsB,EAWLD,EAVXtB,EAAKM,SAASkB,mBAAmB,YAAyBD,ECnBvDE,KACC,EAACC,YACCA,EAAWC,eACXA,EAAcC,aACdA,EAAYC,aACZA,EAAYC,MACZA,EAAKC,UACLA,MAEA,IAAIC,EAAa,GACbC,EAAM,mCACNC,EAAOC,OAAON,GAAcO,MAAM,EAAG,GACrB,OAAhBV,IACFO,EAAM,uCACNP,EAAc,IAEK,KAAjBG,IACFV,QAAQC,IAAI,WACZc,EAAO,kBAEJH,EAAY,GACfC,EAAWK,KAAK,kBAElB,IAAK,MAAMC,KAAOzC,EAChB,IAAK,MAAMC,KAAMiC,EACXjC,IAAOwC,EAAIxC,IACbkC,EAAWK,KAAKC,EAAIvC,MAI1B,MAAO,8IAGWkC,IAAMP,WAAqBC,uIAGVG,wGAEAE,kDACDE,uFACqCN,iGAQ1EW,KAAK,KDlBN,MAAOC,GACPrB,QAAQC,IAAIoB,GAbhB,IAAkBjB,EAHhBkB,MElBF,MAAMC,EAAaxC,SAASC,cAAc,+BACpCwC,EAAWzC,SAASC,cAAc,6BAExCuC,EAAWhC,iBAAiB,SAG5B,SAAkCkC,GAC9BA,EAAIhC,iBACJ8B,EAAWG,UAAUC,OAAO,UAW5BJ,EAAWG,UAAUE,SAAS,UAC9BL,EAAWM,YAAY,sBACvBN,EAAWM,YAAY,oBAjB3BL,EAASjC,iBAAiB,SAQ1B,SAAgCkC,GAC5BA,EAAIhC,iBACJ+B,EAASE,UAAUC,OAAO,UAW1BH,EAASE,UAAUE,SAAS,UAC5BJ,EAASK,YAAY,sBACrBL,EAASK,YAAY","sources":["src/index.js","src/js/genre.js","src/js/renderUi.js","src/js/markupFilms.js","src/js/watchedFilmsLS.js"],"sourcesContent":["import './js/api';\nimport './js/constants';\nimport './js/elements';\nimport './js/students-modal';\nimport './js/renderUi';\nimport './js/watchedFilmsLS';\n","const genre = [\n  { id: 28, name: 'Action' },\n\n  { id: 12, name: 'Adventure' },\n\n  { id: 16, name: 'Animation' },\n\n  { id: 35, name: 'Comedy' },\n\n  { id: 80, name: 'Crime' },\n  { id: 99, name: 'Documentary' },\n\n  { id: 18, name: 'Drama' },\n\n  { id: 10751, name: 'Family' },\n\n  { id: 14, name: 'Fantasy' },\n\n  { id: 36, name: 'History' },\n\n  { id: 27, name: 'Horror' },\n\n  { id: 10402, name: 'Music' },\n\n  { id: 9648, name: 'Mystery' },\n\n  { id: 10749, name: 'Romance' },\n\n  { id: 878, name: 'Science Fiction' },\n\n  { id: 10770, name: 'TV Movie' },\n\n  { id: 53, name: 'Thriller' },\n\n  { id: 10752, name: 'War' },\n\n  { id: 37, name: 'Western' },\n];\n\nexport { genre };\n","import markupFilms from './markupFilms';\nimport Api from './api';\nimport { genre } from './genre';\n\nconst refs = {\n  search: document.querySelector('.form__input'),\n  button: document.querySelector('.button__submit'),\n  gallery: document.querySelector('.gallery'),\n  filmLsit: document.querySelector('.films'),\n};\n\nconst api = new Api();\n\nrefs.search.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  api.searchQuery = e.currentTarget.elements.searchQuery.value;\n  findRenderUi();\n}\n\nfunction renderUi(result) {\n  refs.filmLsit.insertAdjacentHTML('beforeend', markupFilms(result));\n}\n\nasync function findRenderUi() {\n  try {\n    await api.findGenre();\n    console.log(api.genre);\n\n    const resultApi = await api.search();\n    // console.log(api.totlaPages);\n    renderUi(resultApi);\n  } catch (error) {\n    console.log(error);\n  }\n}\n","import { genre } from './genre';\nexport default function markupFilms(results) {\n  return results\n    .map(\n      ({\n        poster_path,\n        original_title,\n        vote_average,\n        release_date,\n        title,\n        genre_ids,\n      }) => {\n        let arrayGenre = [];\n        let url = 'https://image.tmdb.org/t/p/w500/';\n        let year = String(release_date).slice(0, 4);\n        if (poster_path === null) {\n          url = 'https://i.postimg.cc/NF6QdzcX/no.jpg';\n          poster_path = '';\n        }\n        if (release_date === '') {\n          console.log('no data');\n          year = 'no information';\n        }\n        if ((genre_ids = [])) {\n          arrayGenre.push('No information');\n        }\n        for (const gen of genre) {\n          for (const id of genre_ids) {\n            if (id === gen.id) {\n              arrayGenre.push(gen.name);\n            }\n          }\n        }\n        return `<li class=\"films__item\">\n          <a href=\"\" class=\"films__item-link\">\n            <div class=\"poster__thumb\">\n              <img src=\"${url}${poster_path}\" alt=\"${original_title}\" class=\"poster__foto\" />\n            </div>\n              <div class=\"poster__about\">\n                <p class=\"poster__title\">${title}</p>\n                  <div class=\"poster__description\">\n                <p class=\"poster__genre\">${arrayGenre}</p>\n                <p class=\"poster__year\">${year}</p>\n                <p class=\"poster__rating\"><span class=\"poster__rating__text\">${vote_average}</span></p>\n                </div>\n              </div>\n\n          </a>\n        </li>`;\n      }\n    )\n    .join('');\n}\n","const watchedBtn = document.querySelector('button[data-type=\"watched\"]')\nconst queueBtn = document.querySelector('button[data-type=\"queue\"]')\n\nwatchedBtn.addEventListener('click', onWatchedFilmsToSaveBtn)\nqueueBtn.addEventListener('click', onQueueFilmsToSaveBtn)\n\nfunction onWatchedFilmsToSaveBtn (evt) {\n    evt.preventDefault()\n    watchedBtn.classList.toggle('active')\n    btnWatchedTextContentToChange()\n}\n\nfunction onQueueFilmsToSaveBtn (evt) {\n    evt.preventDefault()\n    queueBtn.classList.toggle('active')\n    btnQueueTextContentToChange()\n}\n\nfunction btnWatchedTextContentToChange() {\n    watchedBtn.classList.contains('active') ?\n    watchedBtn.textContent='remove from watched' :\n    watchedBtn.textContent='add to watched'\n}\n\nfunction btnQueueTextContentToChange() {\n    queueBtn.classList.contains('active') ?\n    queueBtn.textContent='remove from watched' :\n    queueBtn.textContent='add to queue'\n}\n\n    "],"names":["parcelRequire","$2ef557511493f775$export$ee68baf4cb9663dc","id","name","$21cabda1c699d742$var$refs","search","document","querySelector","button","gallery","filmLsit","$21cabda1c699d742$var$api","$7rYDH","default","addEventListener","e","preventDefault","searchQuery","currentTarget","elements","value","async","findGenre","console","log","genre","resultApi","result","insertAdjacentHTML","map","poster_path","original_title","vote_average","release_date","title","genre_ids","arrayGenre","url","year","String","slice","push","gen","join","error","$21cabda1c699d742$var$findRenderUi","$059e53287aa418c1$var$watchedBtn","$059e53287aa418c1$var$queueBtn","evt","classList","toggle","contains","textContent"],"version":3,"file":"index.39a0550d.js.map"}